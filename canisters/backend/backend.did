type CryptoOffer = record {
  id : nat64;
  status : OfferStatus;
  offer_limit : record { nat64; nat64 };
  creator : principal;
  token_b_escrow_tx_index : opt nat;
  token_a : principal;
  token_b : principal;
  token_a_escrow_at : opt nat64;
  price_per_unit : nat64;
  token_a_release_tx_index : opt nat;
  token_b_release_tx_index : opt nat;
  token_a_escrow_tx_index : opt nat;
  token_a_amount : opt nat64;
  token_b_escrow_at : opt nat64;
  conditions : opt text;
  visibility : OfferVisibility;
  taken_at : opt nat64;
  contrapart : opt principal;
  creation_date : nat64;
};
type OfferStatus = variant {
  Started;
  Paused;
  Open;
  TokenAEscrow;
  TokenBEscrow;
  TokenBRelease;
  Cancelled;
  Completed;
};
type OfferVisibility = variant { Private; Public };
type Review = record {
  to : principal;
  from : principal;
  created_at : nat64;
  positive : bool;
};
type User = record {
  total_release_time : nat64;
  first_connection : nat64;
  "principal" : principal;
  reviews_made : vec record { principal; Review };
  premium : bool;
  reviews_received : vec record { principal; Review };
  name : opt text;
  community : opt null;
  referred_by : opt principal;
  referrals : vec principal;
  email : opt text;
  positive_reviews : nat64;
  total_volume_transacted : nat64;
  completed_tx : nat64;
  negative_reviews : nat64;
};
service : () -> {
  cancel_crypto_offer : (nat64) -> (opt CryptoOffer);
  edit_crypto_offer : (
      nat64,
      opt principal,
      opt principal,
      opt nat64,
      opt record { nat64; nat64 },
      opt OfferVisibility,
      opt text,
    ) -> (opt CryptoOffer);
  edit_user : (opt text, opt text) -> (opt User);
  escrow_crypto_token_a : (nat64) -> (opt CryptoOffer);
  escrow_crypto_token_b : (nat64) -> (opt CryptoOffer);
  get_all_available_fees : () -> (vec record { principal; nat64 }) query;
  get_all_crypto_offers : () -> (vec CryptoOffer) query;
  get_available_fee : (principal) -> (nat64) query;
  get_crypto_offer : (nat64) -> (opt CryptoOffer) query;
  get_crypto_offers_by_user : (principal) -> (vec CryptoOffer) query;
  get_user : (principal) -> (opt User) query;
  new_authority : (principal) -> ();
  new_crypto_offer : (
      principal,
      principal,
      nat64,
      record { nat64; nat64 },
      OfferVisibility,
      opt text,
    ) -> (CryptoOffer);
  new_user : (opt principal) -> (User);
  pause_crypto_offer : (nat64) -> (opt CryptoOffer);
  remove_authority : (principal) -> ();
  resume_crypto_offer : (nat64) -> (opt CryptoOffer);
  take_crypto_offer : (nat64, nat64) -> (opt CryptoOffer);
  withdraw_token_from_vault : (principal) -> (principal, nat64);
}
